module Main where

template DraftExam
    with
        teacher   : Party
        assistant : Party
        subject   : Text
        year      : Int
        question  : Text
    where 
        signatory teacher
        observer assistant

        -- teacher can prepare a "new" exam for his class next year
        choice BrandNewExam : ContractId DraftExam
            controller teacher
            do
                create this with year = year + 1

        -- todo: separate choices or check for teacher and assistant
        -- both the teacher and the assistant can update the exams contents
        choice Revise : ContractId DraftExam
            with
                user : Party
                newQuestion : Text
            controller user
            do
                assertMsg "Only the teacher and assistant can revise the exam draft" (user == teacher || user == assistant)
                create this with question = newQuestion

        -- teacher can delete the draft exam (same as archive)
        choice ScrapExam : () 
            controller teacher
            do return ()
        
        -- teacher can choose to publish the final version of the exam
        choice Publish : ContractId Exam
            with
                students : [Party]
            controller teacher
            do
                create Exam with ..

template Exam
    with 
        teacher  : Party
        subject  : Text
        year     : Int
        question : Text
        students : [Party]
    where
        signatory teacher
        observer students

        ensure subject /= "" && question /= ""

        key (teacher, subject, year) : (Party, Text, Int)
        maintainer key._1

        choice TakeExam : ContractId ExamInProgress
            with
                student : Party
            controller student
            do 
                assertMsg "student must be part of allowed students to take exam" (elem student students)
                create ExamInProgress with answer = ""; ..
        
        -- not possible to take the exam anymore
        choice Remove : () 
            controller teacher
            do return ()
        
        -- something is wrong with the exam and needs to be recalled
        choice FixExam : ContractId DraftExam
            with
                assistant : Party
            controller teacher
            do create DraftExam with ..

getLetterGrade: Decimal -> Text
getLetterGrade score
    | score >= 90.0 = "A"
    | score >= 80.0 = "B"
    | score >= 70.0 = "C"
    | otherwise = "F"
template ExamInProgress
    with 
        teacher  : Party
        student  : Party
        subject  : Text
        year     : Int
        question : Text
        answer   : Text
     where
        signatory teacher, student

        choice RewriteAnswer : ContractId ExamInProgress
            with
                newAnswer : Text
            controller student
            do
                create this with answer = newAnswer
        
        choice Grade : ContractId ExamGraded
            with
                score : Decimal
                note: Text
                parent: Party
            controller teacher
            do
                now <- getTime
                create ExamGraded with 
                    gradeLetter = getLetterGrade score
                    gradedTime = now
                    .. 

template ExamGraded
    with 
        teacher     : Party
        student     : Party
        parent      : Party
        subject     : Text
        year        : Int
        question    : Text
        answer      : Text
        score       : Decimal
        gradeLetter : Text
        note        : Text
        gradedTime  : Time      
     where
        signatory teacher, student
        observer parent

        ensure score >= 0.0 && score <= 100.0